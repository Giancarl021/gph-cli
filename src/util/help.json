{
    "$schema": "https://gist.githubusercontent.com/Giancarl021/127020c9cecb032beff587e308bec4ca/raw/af14cd087c7f3f2f1b1d6a6daec6f82699a44973/@giancarl021__cli-core__help-descriptor.schema.json",
    "token": {
        "description": "Retrieve a valid access token for specific credentials",
        "flags": {
            "credentials": {
                "aliases": ["c"],
                "description": "The credentials ID to be used. If omitted will use the default credentials if set, otherwise will fail",
                "values": ["<credentials-id>"]
            },
            "graph-version": {
                "aliases": ["v"],
                "description": "The Graph API version to be used. If omitted will be 'v1.0'",
                "values": ["v1.0", "beta"]
            }
        }
    },
    "unit": {
        "description": "Retrieve a entity from Graph API for specific credentials",
        "args": ["endpoint"],
        "flags": {
            "credentials": {
                "aliases": ["c"],
                "description": "The credentials ID to be used. If omitted will use the default credentials if set, otherwise will fail",
                "values": ["<credentials-id>"]
            },
            "graph-version": {
                "aliases": ["v"],
                "description": "The Graph API version to be used. If omitted will be 'v1.0'",
                "values": ["v1.0", "beta"]
            },
            "cache": {
                "aliases": ["C"],
                "description": "Cache this specific request. Default false"
            },
            "body": {
                "aliases": ["b"],
                "description": "The body of the request",
                "values": ["<request-body>"]
            },
            "method": {
                "aliases": ["m"],
                "description": "The method of the request. Default 'GET'",
                "values": ["GET", "POST", "PUT", "PATCH", "DELETE"]
            },
            "headers": {
                "aliases": ["H"],
                "description": "The headers of the request. Format: 'Key1: Value1; Key2: Value2; ...KeyN: ValueN'. Default ''. NOTE: The access token does not need to be set here"
            }
        }
    },
    "list": {
        "description": "Retrieve a list of entities from Graph API for specific credentials",
        "args": ["endpoint"],
        "flags": {
            "credentials": {
                "aliases": ["c"],
                "description": "The credentials ID to be used. If omitted will use the default credentials if set, otherwise will fail",
                "values": ["<credentials-id>"]
            },
            "graph-version": {
                "aliases": ["v"],
                "description": "The Graph API version to be used. If omitted will be 'v1.0'",
                "values": ["v1.0", "beta"]
            },
            "cache": {
                "aliases": ["C"],
                "description": "Cache this specific request. Default false"
            },
            "body": {
                "aliases": ["b"],
                "description": "The body of the request",
                "values": ["<request-body>"]
            },
            "method": {
                "aliases": ["m"],
                "description": "The method of the request. Default 'GET'",
                "values": ["GET", "POST", "PUT", "PATCH", "DELETE"]
            },
            "headers": {
                "aliases": ["H"],
                "description": "The headers of the request. Format: 'Key1: Value1; Key2: Value2; ...KeyN: ValueN'. Default ''. NOTE: The access token does not need to be set here"
            },
            "limit": {
                "description": "The limit of pages retrieved in the pagination",
                "values": ["<page-limit>"]
            },
            "offset": {
                "description": "The number of skipped pages after saving the data in the pagination",
                "values": ["<page-offset>"]
            }
        }
    },
    "massive": {
        "description": "Retrieve multiple entities from Graph API for specific credentials based on pattern-generated endpoints",
        "args": ["pattern/for/{<index>}/interpolation", "@from:<path/to/array-or-array-of-arrays.json> | 0a,0b,0c[;1a,1b,1c[;...Na,Nb,Nc]]"],
        "flags": {
            "credentials": {
                "aliases": ["c"],
                "description": "The credentials ID to be used. If omitted will use the default credentials if set, otherwise will fail",
                "values": ["<credentials-id>"]
            },
            "graph-version": {
                "aliases": ["v"],
                "description": "The Graph API version to be used. If omitted will be 'v1.0'",
                "values": ["v1.0", "beta"]
            },
            "cache": {
                "aliases": ["C"],
                "description": "Cache this specific request. Default false"
            },
            "body": {
                "aliases": ["b"],
                "description": "The body of the request",
                "values": ["<request-body>"]
            },
            "method": {
                "aliases": ["m"],
                "description": "The method of the request. Default 'GET'",
                "values": ["GET", "POST", "PUT", "PATCH", "DELETE"]
            },
            "headers": {
                "aliases": ["H"],
                "description": "The headers of each individual request. Format: 'Key1: Value1; Key2: Value2; ...KeyN: ValueN'. Default ''"
            },
            "batch-headers": {
                "description": "The headers of each Graph API $batch request. Format: 'Key1: Value1; Key2: Value2; ...KeyN: ValueN'. Default ''"
            },
            "attempts": {
                "description": "The number of attempts with the same error count until failure",
                "values": ["<number-of-attempts>"]
            },
            "requests-per-attempt": {
                "description": "The number of parallel requests sent at each cycle",
                "values": ["<number-of-requests>"]
            },
            "binder-index": {
                "description": "The index of the array used to bind the results. Default 0. Only useful when using multiple-value interpolation",
                "values": ["<index>"]
            },
            "nullify-errors": {
                "aliases": ["nullify", "lossy"],
                "description": "If the attempts reach their limit, the pending responses will return null. Default false"
            }
        }
    },
    "credentials": {
        "description": "Manage Graph API credentials",
        "subcommands": {
            "list": "Lists the keys of all saved credentials",
            "set": {
                "description": "Creates or updates a credential",
                "args": ["key"],
                "flags": {
                    "client-id": {
                        "aliases": ["c"],
                        "description": "The Azure App Registration Client ID",
                        "optional": false,
                        "values": ["<client-id>"]
                    },
                    "client-secret": {
                        "aliases": ["s"],
                        "description": "The Azure App Registration Client Secret",
                        "optional": false,
                        "values": ["<client-secret>"]
                    },
                    "tenant-id": {
                        "aliases": ["t"],
                        "description": "The Azure App Registration Tenant ID",
                        "optional": false,
                        "values": ["<tenant-id>"]
                    },
                    "delegated": {
                        "aliases": ["d"],
                        "description": "Set the authentication process for this credentials as delegated (user-based login). Default false"
                    },
                    "no-delegated": {
                        "aliases": ["no-d"],
                        "description": "Set the authentication process for this credentials as application (application-based login). Default true"
                    },
                    "force": {
                        "aliases": ["f"],
                        "description": "If a credential with the same key already exists, overwrite"
                    }
                }
            },
            "get": {
                "description": "Gets a saved credential",
                "args": ["key"]
            },
            "remove": {
                "args": ["key"],
                "description": "Removes a saved credential"
            },
            "default": {
                "description": "Manage the default credential used in request commands",
                "subcommands": {
                    "get": "Gets the current default credential key saved",
                    "unset": "Removes the current default credential key saved",
                    "set": {
                        "description": "Sets a new default credential key",
                        "args": ["key"]
                    }
                }
            }
        }
    },
    "template": {
        "description": "Manage request templates for reuse",
        "subcommands": {
            "save": {
                "args": ["unit | list | massive", "...custom-arguments"],
                "description": "Saves a request with custom parameters set to simplify long commands",
                "flags": {
                    "credentials": {
                        "aliases": ["c"],
                        "description": "The credentials ID to be saved on the template. If omitted will set to runtime default",
                        "values": ["<credentials-id>"]
                    },
                    "output": {
                        "aliases": ["o"],
                        "description": "The output path to the template file to be created",
                        "optional": false
                    },
                    "...custom-flags": {
                        "description": "Any custom flag to be added to the request",
                        "values": ["<...any>"]
                    }
                }
            },
            "run": {
                "args": ["path/to/template-file.json", "...custom-arguments"],
                "description": "Runs a request from a template file",
                "flags": {
                    "credentials": {
                        "aliases": ["c"],
                        "description": "The credentials ID to be used on the request. If omitted will use the template value",
                        "values": ["<credentials-id>"]
                    },
                    "...custom-flags": {
                        "description": "Any custom flag to be added to the request",
                        "values": ["<...any>"]
                    }
                }
            }
        }
    }
}