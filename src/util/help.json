{
    "credentials": {
        "description": "Manage saved credentials on the local registry",
        "operations": {
            "set": {
                "description": "Register new credentials",
                "args": ["<credentials-name>"],
                "flags": {
                    "t": {
                        "alias": "tenant-id",
                        "description": "Tenant ID",
                        "value": "<tenant-id>"
                    },
                    "c": {
                        "alias": "client-id",
                        "description": "Client ID",
                        "value": "<client-id>"
                    },
                    "s": {
                        "alias": "client-secret",
                        "description": "Client Secret",
                        "value": "<client-secret>"
                    },
                    "f": {
                        "alias": "force",
                        "description": "Don't ask nothing, just do it"
                    }
                }
            },
            "get": {
                "description": "Print credentails value",
                "args": ["<credentials-name>"]
            },
            "list": "List all current saved credentials",
            "remove": {
                "description": "Delete credentials from registry",
                "args": ["<credentials-name>"],
                "flags": {
                    "f": {
                        "alias": "force",
                        "description": "Don't ask nothing, just do it"
                    }
                }
            },
            "default": {
                "description": "Manage the default credentials used in requests",
                "operations": {
                    "get": "Print the key",
                    "set": {
                        "description": "Set the key",
                        "args": ["<credentials-key>"]
                    },
                    "remove": {
                        "description": "Delete the key",
                        "flags": {
                            "f": {
                                "alias": "force",
                                "description": "Don't ask nothing, just do it"
                            }
                        }
                    }
                }
            }
        }
    },
    "token": {
        "description": "Get the access token to use the Graph API to the tenant",
        "flags": {
            "c": {
                "alias": "credentials",
                "description": "The credentials used in the request"
            },
            "version": {
                "description": "The Graph API version"
            },
            "save": {
                "description": "The directory to save the response"
            }
        }
    },
    "unit": {
        "description": "Returns unitary data (without pagination)",
        "flags": {
            "c": {
                "alias": "credentials",
                "description": "The credentials used in the request"
            },
            "version": {
                "description": "The Graph API version"
            },
            "method": {
                "description": "HTTP Method",
                "value": "GET | POST | PUT | DELETE"
            },
            "cache": {
                "description": "Time To Live of cache in this specific request",
                "value": "<seconds>"
            },
            "save": {
                "description": "The directory to save the response"
            },
            "truncate": {
                "description": "Truncate the response to length of 2000 or specified value",
                "value": "null | <length>"
            },
            "fields": {
                "description": "Filter what fields in the response will return",
                "value": "<field[,field[,...]]>"
            }
        }
    },
    "list": {
        "description": "Returns paginated data",
        "args": ["<url>"],
        "flags": {
            "c": {
                "alias": "credentials",
                "description": "The credentials used in the request"
            },
            "version": {
                "description": "The Graph API version"
            },
            "method": {
                "description": "HTTP Method",
                "value": "GET | POST | PUT | DELETE"
            },
            "cache": {
                "description": "Time To Live of cache in this specific request",
                "value": "<seconds>"
            },
            "save": {
                "description": "The directory to save the response"
            },
            "truncate": {
                "description": "Truncate the response to length of 2000 or specified value",
                "value": "null | <length>"
            },
            "map": {
                "description": "Map the response array before return",
                "value": "<JavaScript function>"
            },
            "filter": {
                "description": "Filter the response array before return",
                "value": "<JavaScript function>"
            },
            "reduce": {
                "description": "Convert all the objects in the response into one accumulator", 
                "value": "<JavaScript function>"
            },
            "limit": {
                "description": "The maximum of pages retrieved",
                "value": "<integer>"
            },
            "offset": {
                "description": "The first page number to start retrieving data",
                "value": "<integer>"
            }
        }
    },
    "massive": {
        "description": "Returns batch data",
        "args": ["<url pattern>", "<foo:value[,value[,...]];bar:value[,value[,...]>"],
        "flags": {
            "c": {
                "alias": "credentials",
                "description": "The credentials used in the request"
            },
            "version": {
                "description": "The Graph API version"
            },
            "method": {
                "description": "HTTP Method",
                "value": "GET | POST | PUT | DELETE"
            },
            "cache": {
                "description": "Time To Live of cache in this specific request",
                "value": "<seconds>"
            },
            "save": {
                "description": "The directory to save the response"
            },
            "truncate": {
                "description": "Truncate the response to length of 2000 or specified value",
                "value": "null | <length>"
            },
            "binder": {
                "description": "The key present in the values parameter to be the key pattern of the response",
                "value": "<key>",
                "required": true
            },
            "type": {
                "description": "The type of the requests of the batch",
                "value": "unit | list",
                "required": true
            }
        }
    },
    "request": {
        "description": "",
        "": ""
    },
    "import": {
        "description": "",
        "": ""
    },
    "export": {
        "description": "",
        "": ""
    },
    "exec": {
        "description": "",
        "": ""
    }
}